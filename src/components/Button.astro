---
type Props = {
	href?: string;
	label?: string;
};

const { href, label } = Astro.props;
---

{
	href && label ? (
		<div class="container-button">
			<a class="litora-button" href={href} aria-label={label} draggable="false">
				<slot>Button</slot>
			</a>
		</div>
	) : (
		<button class="litora-button">
			<slot>Button</slot>
		</button>
	)
}

<style lang="scss">
	@use "#variables.scss" as *;
	@use "#styles/mixins/focus-outline" as *;

	.container-button {
		display: inline-block;
	}

	button:is(.litora-button),
	a:is(.litora-button) {
		height: 44px;
		border-radius: 22px;
		padding: 8px 35px;
		display: grid;
		place-items: center;
		user-select: none;
		background-color: $color-primary;
		border: none;
		letter-spacing: 0.02rem;
		font-size: 1rem;
		font-family: inherit;
		font-weight: 600;
		margin-block: 10px;
		color: $color-on-primary;

		@include focus-outline($color-primary);

		transition:
			box-shadow 0.3s cubic-bezier(0.165, 0.84, 0.44, 1),
			outline-color 0.15s cubic-bezier(0.165, 0.84, 0.44, 1),
			transform 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);

		&:hover {
			box-shadow: $shadow-primary-30;
			cursor: pointer;
		}

		&:focus-visible {
			box-shadow: $shadow-primary-30;
		}
	}
</style>
